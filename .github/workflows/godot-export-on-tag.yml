name: godot-export-on-tag
on:
  push:
    tags:
      - "v*"
jobs:
  export_game:
    runs-on: ubuntu-latest
    name: Export Job
    steps:
      - name: checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          lfs: true
      - name: get tag from version
        id: tag_version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}
      - name: install wine
        id: install_wine
        run: |
          sudo apt install wine64
          echo ::set-output name=WINE_PATH::$(which wine64)
      - name: export game
        id: export
        uses: firebelley/godot-export@v4.1.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/3.5/rc8/Godot_v3.5-rc8_linux_headless.64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/3.5/rc8/Godot_v3.5-rc8_export_templates.tpz
          relative_project_path: ./project
          use_preset_export_path: true
          archive_output: true
          wine_path: ${{ steps.install_wine.outputs.WINE_PATH }}
      - name: create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
          files: ${{ steps.export.outputs.archive_directory }}/* # Added "/*" at the end is glob pattern match for this action
      - name: Install Butler
        id: install_butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default \
          && unzip butler.zip \
          && cp butler /usr/local/sbin \
          && chmod +x /usr/local/sbin/butler

      - name: Run Butler Push
        id: butler_push
        run: |
          set -e
          export BUTLER_API_KEY=$BUTLER_CREDENTIALS
          versionArgument=""
          if [ "$VERSION" != "" ]
          then
              versionArgument="--userversion ${VERSION}"
          elif [ "$VERSION_FILE" != "" ]
          then
              versionArgument="--userversion-file ${VERSION_FILE}"
          fi
          echo "butler push \"$PACKAGE\" $ITCH_USER/$ITCH_GAME:$CHANNEL ${versionArgument}"
          butler push "$PACKAGE" $ITCH_USER/$ITCH_GAME:$CHANNEL ${versionArgument}
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: html5
          ITCH_GAME: example-project
          ITCH_USER: pixelbyte
          # PACKAGE: ${{ steps.export.outputs.url}}
          PACKAGE: ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ steps.tag_version.outputs.TAG_VERSION }}/HTML5.zip
          #Set the itch deploy version to the tag text
          #assumes  we use this step in a workflow with a tag_version step
          VERSION: ${{ steps.tag_version.outputs.TAG_VERSION }}